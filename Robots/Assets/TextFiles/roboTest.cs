/*
------------------------------------------------
Generated by Cradle 2.0.1.0
https://github.com/daterre/Cradle

Original file: roboTest.html
Story format: Harlowe
------------------------------------------------
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cradle;
using IStoryThread = System.Collections.Generic.IEnumerable<Cradle.StoryOutput>;
using Cradle.StoryFormats.Harlowe;

public partial class @roboTest: Cradle.StoryFormats.Harlowe.HarloweStory
{
	#region Variables
	// ---------------

	public class VarDefs: RuntimeVars
	{
		public VarDefs()
		{
		}

	}

	public new VarDefs Vars
	{
		get { return (VarDefs) base.Vars; }
	}

	// ---------------
	#endregion

	#region Initialization
	// ---------------

	public readonly Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros macros1;

	@roboTest()
	{
		this.StartPassage = "Start";

		base.Vars = new VarDefs() { Story = this, StrictMode = true };

		macros1 = new Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros() { Story = this };

		base.Init();
		passage1_Init();
		passage2_Init();
		passage3_Init();
	}

	// ---------------
	#endregion

	// .............
	// #1: Start

	void passage1_Init()
	{
		this.Passages[@"Start"] = new StoryPassage(@"Start", new string[]{  }, passage1_Main);
	}

	IStoryThread passage1_Main()
	{
		yield return text("This is the start of a passage.");
		yield return lineBreak();
		yield return lineBreak();
		yield return link("Go to work", "GoToWork", null);
		yield return lineBreak();
		yield return link("Go to bed", "GoToBed", null);
		yield break;
	}


	// .............
	// #2: GoToWork

	void passage2_Init()
	{
		this.Passages[@"GoToWork"] = new StoryPassage(@"GoToWork", new string[]{  }, passage2_Main);
	}

	IStoryThread passage2_Main()
	{
		yield return text("I'm at work!");
		yield break;
	}


	// .............
	// #3: GoToBed

	void passage3_Init()
	{
		this.Passages[@"GoToBed"] = new StoryPassage(@"GoToBed", new string[]{  }, passage3_Main);
	}

	IStoryThread passage3_Main()
	{
		yield return text("I'm in bed!");
		yield break;
	}


}